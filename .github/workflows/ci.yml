name: ci

on:
  push:
    branches:
      - main
      - develop
      - issues/*
  pull_request:
    branches:
      - main
      - develop
      - issues/*

env:
  cargo-directory: ./
  npm-directory: ./www/

jobs:
  ci:
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    # ===== Cargo =====
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
    - name: Format
      run: cargo fmt --all -- --check
      working-directory: ${{ env.cargo-directory }}
    - name: Lint
      run: cargo clippy
      working-directory: ${{ env.cargo-directory }}
    - name: Build check
      run: cargo check
      working-directory: ${{ env.cargo-directory }}
    - name: Restore cargo cache
      id: cargo_bin_cache_id
      uses: actions/cache@v3
      with:
        path: ~/.cargo/bin/
        key: cargo-bin
    - name: Install cargo-generate and wasm-pack
      if: steps.cargo_bin_cache_id.outputs.cache-hit != 'true'
      run: cargo install cargo-generate wasm-pack
      working-directory: ${{ env.cargo-directory }}
    - name: Build
      run: wasm-pack build --out-dir ./pkg/
      working-directory: ${{ env.cargo-directory }}
    # ===== npm =====
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    - name: Cache node_modules
      id: node_modules_cache_id
      uses: actions/cache@v3
      with:
        path: ${{ env.npm-directory }}node_modules/
        key: node-modules-${{ hashFiles('./**/package.json', './**/yarn.lock') }}
    - name: Install dependencies
      if: steps.node_modules_cache_id.outputs.cache-hit != 'true'
      run: yarn install --frozen-lockfile --non-interactive
      working-directory: ${{ env.npm-directory }}
    - name: Lint
      run: yarn lint
      working-directory: ${{ env.npm-directory }}
    - name: Type check
      run: yarn type-check
      working-directory: ${{ env.npm-directory }}
